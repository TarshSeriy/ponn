from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from dotenv import load_dotenv
import os
import requests

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –∫–Ω–æ–ø–∫–∞-—Å—é—Ä–ø—Ä–∏–∑
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("üéâ –ô–æ–æ–æ–æ–æ–æ–æ–æ –Ω–∞–∂–∏–º–∞–π –∂–æ—Å–∫", web_app=WebAppInfo(url="https://pon-alpha.vercel.app/"))]
    ]
    await update.message.reply_text(
        "–° –¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –∫—Ä–∞—Å—É–Ω—è! üéà –ù–∞—Ç–∏—Å–∫–∞–π –∫–Ω–æ–ø–∫—É, —Ç–∞–º —Å—é—Ä–ø—Ä–∏–∑ üëÄ\n\n"
        "–ê —â–µ –Ω–∞–ø–∏—à–∏ *`/cat`* —ñ –æ—Ç—Ä–∏–º–∞—î—à –º–∏–ª–∏ –∫–æ—Ç–∏–∫–∞ üòª",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True),
        parse_mode="Markdown"
    )

# –ö–æ–º–∞–Ω–¥–∞ /cat ‚Äî –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ –∫–æ—Ç–∞
async def cat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        response = requests.get("https://api.thecatapi.com/v1/images/search")
        data = response.json()
        cat_url = data[0]["url"]
        await update.message.reply_photo(cat_url, caption="–í–æ—Ç —Ç–µ–±–µ –∫–æ—Ç–∏–∫ üòª")
    except Exception as e:
        await update.message.reply_text("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∫–æ—Ç–∏–∫ —É–±–µ–∂–∞–ª üòø")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("cat", cat))

app.run_polling()
