import os
import requests
from dotenv import load_dotenv
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup, WebAppInfo
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ (—Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º)
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton(text="üéâ –û—Ç–∫—Ä—ã—Ç—å —Å—é—Ä–ø—Ä–∏–∑", web_app=WebAppInfo(url="https://pon-gprfbhkrr-sergeys-projects-f4e91b78.vercel.app/"))],
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –ö—É–±–∞—Ä—Å—ã—á üéÅ\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å—é—Ä–ø—Ä–∏–∑!", reply_markup=reply_markup)

# –ö–æ—Ç–∏–∫
async def cat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        response = requests.get("https://api.thecatapi.com/v1/images/search")
        data = response.json()
        cat_url = data[0]["url"]
        await update.message.reply_photo(cat_url, caption="–í–æ—Ç —Ç–µ–±–µ –∫–æ—Ç–∏–∫ üòª")
    except Exception as e:
        await update.message.reply_text("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∫–æ—Ç–∏–∫ —É–±–µ–∂–∞–ª üòø")

# –ë–æ—Ç
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("–∫–æ—Ç–∏–∫", cat))

app.run_polling()
